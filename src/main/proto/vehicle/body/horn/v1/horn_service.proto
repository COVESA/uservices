/*
 * Copyright 2023 GM Global Technology Operations LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package vehicle.body.horn.v1;

import "google/rpc/status.proto";
import "uprotocol/uoptions.proto";
import "vehicle/body/horn/v1/horn_topics.proto";

option java_package = "org.covesa.uservice.vehicle.body.horn.v1";
option java_multiple_files = true;

// This service provides the ability to request activation/deactivation of the
// horn. It is able to request setting a sequence of horn sounds, eg., by
// commanding on/off time, number of cycles, or total sequences.
service Horn {
  // Service Metadata - Name, version, id, rpc methods
  option (uprotocol.service_name) = "body.horn";
  option (uprotocol.service_version_major) = 1;
  option (uprotocol.service_version_minor) = 1;
  option (uprotocol.service_id) = 28;

  // Activate Horn resource
  rpc ActivateHorn(ActivateHornRequest) returns (ActivateHornResponse) {
    option (uprotocol.method_id) = 1;
  }

  // Deactivate Horn resource
  // A deactivation request can be honored only by the uE which sent the
  // activation request.
  rpc DeactivateHorn(DeactivateHornRequest) returns (DeactivateHornResponse) {
    option (uprotocol.method_id) = 2;
  }

  option (uprotocol.publish_topic) = {
    id : 0x8000,
    name : "horn",
    message : "HornStatus"
  };
}

// Use ActivateHornRequest to activate horn
message ActivateHornRequest {
  // To request continuous/sequenced horn mode
  HornMode mode = 1;

  // For a sequenced request there can be up to 7 sequences
  // This is only applicable for sequence mode.
  repeated HornSequence command = 2;
}

// Response for Activate horn request
message ActivateHornResponse {
  // RPC response
  google.rpc.Status status = 1;
}

// To deactivate the horn request
message DeactivateHornRequest {
  // The deactivation request is expected to come from the same uE which sent
  // the activation request.
}

// Response for Deactivate horn
message DeactivateHornResponse {
  // Rpc response
  google.rpc.Status status = 1;
}