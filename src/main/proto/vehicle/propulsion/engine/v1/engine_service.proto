/*
 * Copyright 2023 GM Global Technology Operations LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package vehicle.propulsion.engine.v1;

import "google/rpc/status.proto";
import "uprotocol/uoptions.proto";

option java_package = "org.covesa.uservice.vehicle.propulsion.engine.v1";
option java_multiple_files = true;

// This service provides the ability to request to reset the remaining life for
// the engine components such as the engine oil or air filter.
//
service Engine {
  // Service Metadata - Name, version, id, rpc methods
  option (uprotocol.service_name) = "propulsion.engine";
  option (uprotocol.service_version_major) = 1;
  option (uprotocol.service_version_minor) = 0;
  option (uprotocol.service_id) = 19;

  // Request to reset an engine component's life to 100%. After a reset, the
  // remaining life will go back to 100% and the health state of that component
  // will go back to the OK state.
  rpc ResetHealth(ResetHealthRequest) returns (ResetHealthResponse) {
    option (uprotocol.method_id) = 1;
  }

  option (uprotocol.publish_topic) = {
    id : 0x8000,
    name : "air_filter",
    message : "AirFilter"
  };

  option (uprotocol.publish_topic) = {
    id : 0x8001,
    name : "horn",
    message : "oil"
  };

  option (uprotocol.publish_topic) = {
    id : 0x8002,
    name : "coolant",
    message : "Coolant"
  };

  option (uprotocol.publish_topic) = {
    id : 0x8003,
    name : "engine_state",
    message : "EngineState"
  };
}

// Request to reset the engine component health. After a reset, the remaining
// life of the component will go back to 100% and the health state will go back
// to the OK state.
// Example components supported: oil, air_filter
//
message ResetHealthRequest {
  // Engine component name: oil, air_filter
  string name = 1;
}

// Response to reset health request
message ResetHealthResponse {
  // Rpc return status
  google.rpc.Status status = 1;
}